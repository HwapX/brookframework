var tipuesearch = {"pages": [
     {"title": "BrookAction", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookAction.html"},
     {"title": "BrookAction.EBrookAction", "text": " ", "tags": "", "loc": "BrookAction.EBrookAction.html"},
     {"title": "BrookAction.TBrookAction", "text": " ", "tags": "", "loc": "BrookAction.TBrookAction.html"},
     {"title": "BrookAction.TBrookAction.Create", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Create"},
     {"title": "BrookAction.TBrookAction.Create", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Create"},
     {"title": "BrookAction.TBrookAction.Destroy", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Destroy"},
     {"title": "BrookAction.TBrookAction.Register", "text": "    <p>    <p>  APattern Is an expression defining which URLs is used to call an action. It is possible to use variables inside URLs:    <p></p>    <dl class=\"paragraph_spacing\">    <dt><b>:name</b> &ndash; Represents a variable that spans single URL component between slashes.</dt>    <dd><p>Examples:    <p><code>TMyAction.Register('/foo/:myvar');</code>    <p>Value of a variable <code>&quot;myvar&quot;</code> can be read from the property <a class=\"normal\" href=\"BrookAction.TBrookAction.html#Values\">Values</a>, e.g.:    <p><code>Write(Values.Values['myvar']);</code>    <p>Any number of variables can be combined:    <p><code>TMyAction.Register('/foo/:cat/:id');</code> </p></dd>    <dt><b>*name</b> &ndash; Represents a variable that spans one or more levels between slashes in the current URL.</dt>    <dd><p>Examples:    <p><code>TMyAction.Register('/home/*path');</code>    <p>Any of the following URLs will match:    <p><a  href=\"http://localhost/cgi-bin/cgi1/home/file\">http://localhost/cgi-bin/cgi1/home/file</a> <br> <a  href=\"http://localhost/cgi-bin/cgi1/home/dir/file\">http://localhost/cgi-bin/cgi1/home/dir/file</a> <br> <a  href=\"http://localhost/cgi-bin/cgi1/home/dir/subdir/file\">http://localhost/cgi-bin/cgi1/home/dir/subdir/file</a> etc.    <p>Variable <code>Values.Values['path']</code> will receive <code>'file'</code>, <code>'dir/file'</code> or <code>'dir/subdir/file'</code> correspondingly.    <p>You can also add static text after variable part:    <p><code>TMyAction.Register('/home/*path/download');</code>    <p><a  href=\"http://localhost/cgi-bin/cgi1/home/dir/file/download\">http://localhost/cgi-bin/cgi1/home/dir/file/download</a> &ndash; This will match, <br> <a  href=\"http://localhost/cgi-bin/cgi1/home/dir/file/info\">http://localhost/cgi-bin/cgi1/home/dir/file/info</a> &ndash; but not this, because ending is different.    <p>Multi-level variable can be combined with any number of single-level variables in any order:    <p><code>TMyAction.Register('/home/user/:uid/file/*fpath/version/:vid/info');</code>    <p><b><i>NOTE:</i></b> Only one multi-level variable can be specified per URL. </p></dd>    <dt><b>url/</b> &ndash; Adds a slash to the end of the URL if does not exist.</dt>    <dd><p>Example:    <p><code>TMyAction.Register('/foo/');</code>    <p>An action can be accessed as <a  href=\"http://localhost/cgi-bin/cgi1/foo\">http://localhost/cgi-bin/cgi1/foo</a> or <a  href=\"http://localhost/cgi-bin/cgi1/foo/\">http://localhost/cgi-bin/cgi1/foo/</a>. When called as <a  href=\"http://localhost/cgi-bin/cgi1/foo\">http://localhost/cgi-bin/cgi1/foo</a>, it will be automatically redirected to <a  href=\"http://localhost/cgi-bin/cgi1/foo/\">http://localhost/cgi-bin/cgi1/foo/</a>. If the pathinfo is different from <code>/foo</code> a 404 page is returned; </p></dd>  </dl>    <p> <b><i>NOTE:</i></b> Two actions can't be registered with the same pattern except when they are called by means of different HTTP methods. ADefault A action registered as <i>Default</i> will be called automatically if the URL does not match with <i>Pattern</i> of any registered actions. It is not allowed to register more than one action as default. A typical example of use is:    <p><code>TMyAction.Register('*', True);</code>  ", "tags": "", "loc": "BrookAction.TBrookAction.html#Register"},
     {"title": "BrookAction.TBrookAction.Register", "text": "    <p>  AMethod Informs the HTTP request method being valid the following options: <code>rmAll, rmGet, rmHead, rmOptions, rmPost, rmPut</code> or <code>rmDelete</code>. The only way to register two actions with the same pattern is differentiating the value of this parameter. If at least one action has this parameter changed, the route mapping is enabled in <a class=\"normal\" href=\"BrookUtils.TBrookSettings.html#Mapped\">Mapped</a>. A typical example of use is:    <p></p>    <pre class=\"longcode\"> <span class=\"pascal_keyword\">procedure</span> TMyAction1.Get;  <span class=\"pascal_keyword\">begin</span>    <span class=\"pascal_keyword\">Write</span>(<span class=\"pascal_string\">'GET'</span>);  <span class=\"pascal_keyword\">end</span>;    <span class=\"pascal_keyword\">procedure</span> TMyAction1.Put;  <span class=\"pascal_keyword\">begin</span>    <span class=\"pascal_keyword\">Write</span>(<span class=\"pascal_string\">'PUT'</span>);  <span class=\"pascal_keyword\">end</span>;    <span class=\"pascal_keyword\">procedure</span> TMyAction2.Post;  <span class=\"pascal_keyword\">begin</span>    <span class=\"pascal_keyword\">Write</span>(<span class=\"pascal_string\">'POST'</span>);  <span class=\"pascal_keyword\">end</span>;    <span class=\"pascal_keyword\">initialization</span>    TMyAction1.<span class=\"pascal_keyword\">Register</span>(<span class=\"pascal_string\">'/foo1'</span>, rmGet);    TMyAction1.<span class=\"pascal_keyword\">Register</span>(<span class=\"pascal_string\">'/foo1'</span>, rmPut);    TMyAction2.<span class=\"pascal_keyword\">Register</span>(<span class=\"pascal_string\">'/foo1'</span>, rmPost)</pre>    <p>  ", "tags": "", "loc": "BrookAction.TBrookAction.html#Register"},
     {"title": "BrookAction.TBrookAction.GetPath", "text": " Exemple:    <p><code>/cgi-bin/cgi1/myaction</code>.    ", "tags": "", "loc": "BrookAction.TBrookAction.html#GetPath"},
     {"title": "BrookAction.TBrookAction.DoRequest", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#DoRequest"},
     {"title": "BrookAction.TBrookAction.Request", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Request"},
     {"title": "BrookAction.TBrookAction.GetFields", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#GetFields"},
     {"title": "BrookAction.TBrookAction.GetParams", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#GetParams"},
     {"title": "BrookAction.TBrookAction.GetValues", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#GetValues"},
     {"title": "BrookAction.TBrookAction.UrlFor", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#UrlFor"},
     {"title": "BrookAction.TBrookAction.UrlFor", "text": " Exemple:    <p></p>    <pre class=\"longcode\">       <span class=\"pascal_keyword\">procedure</span> TMyAction.Get;        <span class=\"pascal_keyword\">begin</span>          <span class=\"pascal_comment\">// When calling with http://localhost/cgi-bin/cgi1/foo/myvalue</span>          <span class=\"pascal_comment\">// the output will be /cgi-bin/cgi1/foo/myvalue</span>          <span class=\"pascal_keyword\">Write</span>(UrlFor(TMyAction, [<span class=\"pascal_string\">'myvalue'</span>]));        <span class=\"pascal_keyword\">end</span>;          <span class=\"pascal_keyword\">initialization</span>          TMyAction.<span class=\"pascal_keyword\">Register</span>(<span class=\"pascal_string\">'/foo/:myvar'</span>)</pre>    <p>    ", "tags": "", "loc": "BrookAction.TBrookAction.html#UrlFor"},
     {"title": "BrookAction.TBrookAction.UrlFor", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#UrlFor"},
     {"title": "BrookAction.TBrookAction.UrlFor", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#UrlFor"},
     {"title": "BrookAction.TBrookAction.Get", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Get"},
     {"title": "BrookAction.TBrookAction.Post", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Post"},
     {"title": "BrookAction.TBrookAction.Put", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Put"},
     {"title": "BrookAction.TBrookAction.Delete", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Delete"},
     {"title": "BrookAction.TBrookAction.Head", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Head"},
     {"title": "BrookAction.TBrookAction.Options", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Options"},
     {"title": "BrookAction.TBrookAction.Redirect", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Redirect"},
     {"title": "BrookAction.TBrookAction.Redirect", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Redirect"},
     {"title": "BrookAction.TBrookAction.Redirect", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Redirect"},
     {"title": "BrookAction.TBrookAction.Redirect", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Redirect"},
     {"title": "BrookAction.TBrookAction.Error", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Error"},
     {"title": "BrookAction.TBrookAction.Error", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Error"},
     {"title": "BrookAction.TBrookAction.Stop", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Stop"},
     {"title": "BrookAction.TBrookAction.Stop", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Stop"},
     {"title": "BrookAction.TBrookAction.Render", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Render"},
     {"title": "BrookAction.TBrookAction.Render", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Render"},
     {"title": "BrookAction.TBrookAction.Clear", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Clear"},
     {"title": "BrookAction.TBrookAction.Exists", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Exists"},
     {"title": "BrookAction.TBrookAction.Write", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Write"},
     {"title": "BrookAction.TBrookAction.Write", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Write"},
     {"title": "BrookAction.TBrookAction.Write", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Write"},
     {"title": "BrookAction.TBrookAction.Write", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Write"},
     {"title": "BrookAction.TBrookAction.Write", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Write"},
     {"title": "BrookAction.TBrookAction.Write", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Write"},
     {"title": "BrookAction.TBrookAction.Write", "text": "    ", "tags": "", "loc": "BrookAction.TBrookAction.html#Write"},
     {"title": "BrookAction.TBrookAction.Files", "text": " ", "tags": "", "loc": "BrookAction.TBrookAction.html#Files"},
     {"title": "BrookAction.TBrookAction.Fields", "text": " ", "tags": "", "loc": "BrookAction.TBrookAction.html#Fields"},
     {"title": "BrookAction.TBrookAction.Params", "text": " ", "tags": "", "loc": "BrookAction.TBrookAction.html#Params"},
     {"title": "BrookAction.TBrookAction.Values", "text": " ", "tags": "", "loc": "BrookAction.TBrookAction.html#Values"},
     {"title": "BrookAction.TBrookAction.Method", "text": " ", "tags": "", "loc": "BrookAction.TBrookAction.html#Method"},
     {"title": "BrookAction.TBrookGAction", "text": " ", "tags": "", "loc": "BrookAction.TBrookGAction.html"},
     {"title": "BrookAction.TBrookGAction.Create", "text": "    ", "tags": "", "loc": "BrookAction.TBrookGAction.html#Create"},
     {"title": "BrookAction.TBrookGAction.Destroy", "text": "    ", "tags": "", "loc": "BrookAction.TBrookGAction.html#Destroy"},
     {"title": "BrookAction.TBrookGAction.Request", "text": "    ", "tags": "", "loc": "BrookAction.TBrookGAction.html#Request"},
     {"title": "BrookAction.TBrookGAction.Entity", "text": " ", "tags": "", "loc": "BrookAction.TBrookGAction.html#Entity"},
     {"title": "BrookAction.TBrookActionClass", "text": " ", "tags": "", "loc": "BrookAction.html#TBrookActionClass"},
     {"title": "BrookApplication", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookApplication.html"},
     {"title": "BrookApplication.EBrookApplication", "text": " ", "tags": "", "loc": "BrookApplication.EBrookApplication.html"},
     {"title": "BrookApplication.IBrookApplication", "text": " ", "tags": "", "loc": "BrookApplication.IBrookApplication.html"},
     {"title": "BrookApplication.IBrookApplication.GetTerminated", "text": "    ", "tags": "", "loc": "BrookApplication.IBrookApplication.html#GetTerminated"},
     {"title": "BrookApplication.IBrookApplication.Instance", "text": "    ", "tags": "", "loc": "BrookApplication.IBrookApplication.html#Instance"},
     {"title": "BrookApplication.IBrookApplication.Run", "text": "    ", "tags": "", "loc": "BrookApplication.IBrookApplication.html#Run"},
     {"title": "BrookApplication.IBrookApplication.Terminate", "text": "    ", "tags": "", "loc": "BrookApplication.IBrookApplication.html#Terminate"},
     {"title": "BrookApplication.IBrookApplication.Terminated", "text": " ", "tags": "", "loc": "BrookApplication.IBrookApplication.html#Terminated"},
     {"title": "BrookApplication.BrookApp", "text": "    ", "tags": "", "loc": "BrookApplication.html#BrookApp"},
     {"title": "BrookApplication.BrookRegisterApp", "text": "    ", "tags": "", "loc": "BrookApplication.html#BrookRegisterApp"},
     {"title": "BrookApplication.BrookUnregisterApp", "text": "    ", "tags": "", "loc": "BrookApplication.html#BrookUnregisterApp"},
     {"title": "BrookClasses", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookClasses.html"},
     {"title": "BrookClasses.IBrookInterface", "text": " ", "tags": "", "loc": "BrookClasses.IBrookInterface.html"},
     {"title": "BrookClasses.TBrookObject", "text": " ", "tags": "", "loc": "BrookClasses.TBrookObject.html"},
     {"title": "BrookClasses.TBrookInterfacedObject", "text": " ", "tags": "", "loc": "BrookClasses.TBrookInterfacedObject.html"},
     {"title": "BrookClasses.TBrookComponent", "text": " ", "tags": "", "loc": "BrookClasses.TBrookComponent.html"},
     {"title": "BrookClasses.TBrookClass", "text": " ", "tags": "", "loc": "BrookClasses.html#TBrookClass"},
     {"title": "BrookConfigurator", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookConfigurator.html"},
     {"title": "BrookConfigurator.EBrookConfigurator", "text": " ", "tags": "", "loc": "BrookConfigurator.EBrookConfigurator.html"},
     {"title": "BrookConfigurator.TBrookConfigurator", "text": " ", "tags": "", "loc": "BrookConfigurator.TBrookConfigurator.html"},
     {"title": "BrookConfigurator.TBrookConfigurator.Create", "text": "    ", "tags": "", "loc": "BrookConfigurator.TBrookConfigurator.html#Create"},
     {"title": "BrookConfigurator.TBrookConfigurator.Create", "text": "    ", "tags": "", "loc": "BrookConfigurator.TBrookConfigurator.html#Create"},
     {"title": "BrookConfigurator.TBrookConfigurator.Destroy", "text": "    ", "tags": "", "loc": "BrookConfigurator.TBrookConfigurator.html#Destroy"},
     {"title": "BrookConfigurator.TBrookConfigurator.Load", "text": "    ", "tags": "", "loc": "BrookConfigurator.TBrookConfigurator.html#Load"},
     {"title": "BrookConfigurator.TBrookConfigurator.Clear", "text": "    ", "tags": "", "loc": "BrookConfigurator.TBrookConfigurator.html#Clear"},
     {"title": "BrookConfigurator.TBrookConfigurator.Configure", "text": "    ", "tags": "", "loc": "BrookConfigurator.TBrookConfigurator.html#Configure"},
     {"title": "BrookConfigurator.TBrookConfigurator.AutoLoaded", "text": " ", "tags": "", "loc": "BrookConfigurator.TBrookConfigurator.html#AutoLoaded"},
     {"title": "BrookConfigurator.TBrookConfigurator.Configuration", "text": " Exemple:    <p><code>cfg.Configuration := 'param1=value1;param2=value2;param3=value2';</code>    <p>or:    <p><code>cfg.Configuration := 'cgi1.cfg';</code>    <p>This option requires the following file format:    <p></p>    <pre class=\"longcode\">   param1=value1    param2=value2    param3=value2 </pre>    <p>    <p>NOTE: If a configuration is passed to <code>BrookSettings.Configuration</code>, the data informed in this property will be disregarded. ", "tags": "", "loc": "BrookConfigurator.TBrookConfigurator.html#Configuration"},
     {"title": "BrookConfigurator.TBrookConfigurator.Target", "text": " ", "tags": "", "loc": "BrookConfigurator.TBrookConfigurator.html#Target"},
     {"title": "BrookConfigurator.TBrookConfigurator.Values", "text": " ", "tags": "", "loc": "BrookConfigurator.TBrookConfigurator.html#Values"},
     {"title": "BrookConfigurator.TBrookConfigurator.ClassChecking", "text": " ", "tags": "", "loc": "BrookConfigurator.TBrookConfigurator.html#ClassChecking"},
     {"title": "BrookConfigurator.TBrookConfiguratorClass", "text": " ", "tags": "", "loc": "BrookConfigurator.html#TBrookConfiguratorClass"},
     {"title": "BrookConstraints", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookConstraints.html"},
     {"title": "BrookConstraints.EBrookConstraint", "text": " ", "tags": "", "loc": "BrookConstraints.EBrookConstraint.html"},
     {"title": "BrookConstraints.EBrookConstraint.Create", "text": "    ", "tags": "", "loc": "BrookConstraints.EBrookConstraint.html#Create"},
     {"title": "BrookConstraints.EBrookConstraint.CreateFmt", "text": "    ", "tags": "", "loc": "BrookConstraints.EBrookConstraint.html#CreateFmt"},
     {"title": "BrookConstraints.EBrookConstraint.Destroy", "text": "    ", "tags": "", "loc": "BrookConstraints.EBrookConstraint.html#Destroy"},
     {"title": "BrookConstraints.EBrookConstraint.Constraint", "text": " ", "tags": "", "loc": "BrookConstraints.EBrookConstraint.html#Constraint"},
     {"title": "BrookConstraints.TBrookCustomConstraint", "text": " ", "tags": "", "loc": "BrookConstraints.TBrookCustomConstraint.html"},
     {"title": "BrookConstraints.TBrookCustomConstraint.Error", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookCustomConstraint.html#Error"},
     {"title": "BrookConstraints.TBrookCustomConstraint.Error", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookCustomConstraint.html#Error"},
     {"title": "BrookConstraints.TBrookCustomConstraint.Stop", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookCustomConstraint.html#Stop"},
     {"title": "BrookConstraints.TBrookCustomConstraint.Stop", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookCustomConstraint.html#Stop"},
     {"title": "BrookConstraints.TBrookCustomConstraint.Execute", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookCustomConstraint.html#Execute"},
     {"title": "BrookConstraints.TBrookConstraint", "text": " ", "tags": "", "loc": "BrookConstraints.TBrookConstraint.html"},
     {"title": "BrookConstraints.TBrookConstraint.Create", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookConstraint.html#Create"},
     {"title": "BrookConstraints.TBrookConstraint.Register", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookConstraint.html#Register"},
     {"title": "BrookConstraints.TBrookConstraint.Action", "text": " ", "tags": "", "loc": "BrookConstraints.TBrookConstraint.html#Action"},
     {"title": "BrookConstraints.TBrookConstraint.Route", "text": " ", "tags": "", "loc": "BrookConstraints.TBrookConstraint.html#Route"},
     {"title": "BrookConstraints.TBrookConstraintItem", "text": " ", "tags": "", "loc": "BrookConstraints.TBrookConstraintItem.html"},
     {"title": "BrookConstraints.TBrookConstraintItem.ActionClass", "text": " ", "tags": "", "loc": "BrookConstraints.TBrookConstraintItem.html#ActionClass"},
     {"title": "BrookConstraints.TBrookConstraintItem.ConstraintClass", "text": " ", "tags": "", "loc": "BrookConstraints.TBrookConstraintItem.html#ConstraintClass"},
     {"title": "BrookConstraints.TBrookCustomConstraints", "text": " ", "tags": "", "loc": "BrookConstraints.TBrookCustomConstraints.html"},
     {"title": "BrookConstraints.TBrookCustomConstraints.Create", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookCustomConstraints.html#Create"},
     {"title": "BrookConstraints.TBrookCustomConstraints.Destroy", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookCustomConstraints.html#Destroy"},
     {"title": "BrookConstraints.TBrookConstraints", "text": " ", "tags": "", "loc": "BrookConstraints.TBrookConstraints.html"},
     {"title": "BrookConstraints.TBrookConstraints.RegisterService", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookConstraints.html#RegisterService"},
     {"title": "BrookConstraints.TBrookConstraints.UnregisterService", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookConstraints.html#UnregisterService"},
     {"title": "BrookConstraints.TBrookConstraints.Service", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookConstraints.html#Service"},
     {"title": "BrookConstraints.TBrookConstraints.Add", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookConstraints.html#Add"},
     {"title": "BrookConstraints.TBrookConstraints.Execute", "text": "    ", "tags": "", "loc": "BrookConstraints.TBrookConstraints.html#Execute"},
     {"title": "BrookConstraints.TBrookCustomConstraintClass", "text": " ", "tags": "", "loc": "BrookConstraints.html#TBrookCustomConstraintClass"},
     {"title": "BrookConstraints.TBrookConstraintClass", "text": " ", "tags": "", "loc": "BrookConstraints.html#TBrookConstraintClass"},
     {"title": "BrookConstraints.TBrookCustomConstraintsClass", "text": " ", "tags": "", "loc": "BrookConstraints.html#TBrookCustomConstraintsClass"},
     {"title": "BrookConstraints.TBrookConstraintsClass", "text": " ", "tags": "", "loc": "BrookConstraints.html#TBrookConstraintsClass"},
     {"title": "BrookConstraints.PBrookConstraintItem", "text": " ", "tags": "", "loc": "BrookConstraints.html#PBrookConstraintItem"},
     {"title": "BrookConsts", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookConsts.html"},
     {"title": "BrookConsts.ES", "text": " ", "tags": "", "loc": "BrookConsts.html#ES"},
     {"title": "BrookConsts.NS", "text": " ", "tags": "", "loc": "BrookConsts.html#NS"},
     {"title": "BrookConsts.BR", "text": " ", "tags": "", "loc": "BrookConsts.html#BR"},
     {"title": "BrookConsts.HS", "text": " ", "tags": "", "loc": "BrookConsts.html#HS"},
     {"title": "BrookConsts.LE", "text": " ", "tags": "", "loc": "BrookConsts.html#LE"},
     {"title": "BrookConsts.NU", "text": " ", "tags": "", "loc": "BrookConsts.html#NU"},
     {"title": "BrookConsts.HT", "text": " ", "tags": "", "loc": "BrookConsts.html#HT"},
     {"title": "BrookConsts.LF", "text": " ", "tags": "", "loc": "BrookConsts.html#LF"},
     {"title": "BrookConsts.CR", "text": " ", "tags": "", "loc": "BrookConsts.html#CR"},
     {"title": "BrookConsts.CRLF", "text": " ", "tags": "", "loc": "BrookConsts.html#CRLF"},
     {"title": "BrookConsts.NullDate", "text": " ", "tags": "", "loc": "BrookConsts.html#NullDate"},
     {"title": "BrookConsts.NullTime", "text": " ", "tags": "", "loc": "BrookConsts.html#NullTime"},
     {"title": "BrookConsts.NullDateTime", "text": " ", "tags": "", "loc": "BrookConsts.html#NullDateTime"},
     {"title": "BrookConsts.SP", "text": " ", "tags": "", "loc": "BrookConsts.html#SP"},
     {"title": "BrookConsts.DQ", "text": " ", "tags": "", "loc": "BrookConsts.html#DQ"},
     {"title": "BrookConsts.PO", "text": " ", "tags": "", "loc": "BrookConsts.html#PO"},
     {"title": "BrookConsts.PT", "text": " ", "tags": "", "loc": "BrookConsts.html#PT"},
     {"title": "BrookConsts.AM", "text": " ", "tags": "", "loc": "BrookConsts.html#AM"},
     {"title": "BrookConsts.AP", "text": " ", "tags": "", "loc": "BrookConsts.html#AP"},
     {"title": "BrookConsts.PS", "text": " ", "tags": "", "loc": "BrookConsts.html#PS"},
     {"title": "BrookConsts.PE", "text": " ", "tags": "", "loc": "BrookConsts.html#PE"},
     {"title": "BrookConsts.AK", "text": " ", "tags": "", "loc": "BrookConsts.html#AK"},
     {"title": "BrookConsts.CS", "text": " ", "tags": "", "loc": "BrookConsts.html#CS"},
     {"title": "BrookConsts.DT", "text": " ", "tags": "", "loc": "BrookConsts.html#DT"},
     {"title": "BrookConsts.US", "text": " ", "tags": "", "loc": "BrookConsts.html#US"},
     {"title": "BrookConsts.CO", "text": " ", "tags": "", "loc": "BrookConsts.html#CO"},
     {"title": "BrookConsts.SC", "text": " ", "tags": "", "loc": "BrookConsts.html#SC"},
     {"title": "BrookConsts.LT", "text": " ", "tags": "", "loc": "BrookConsts.html#LT"},
     {"title": "BrookConsts.EQ", "text": " ", "tags": "", "loc": "BrookConsts.html#EQ"},
     {"title": "BrookConsts.GT", "text": " ", "tags": "", "loc": "BrookConsts.html#GT"},
     {"title": "BrookConsts.QU", "text": " ", "tags": "", "loc": "BrookConsts.html#QU"},
     {"title": "BrookConsts.AT", "text": " ", "tags": "", "loc": "BrookConsts.html#AT"},
     {"title": "BrookConsts.DS", "text": " ", "tags": "", "loc": "BrookConsts.html#DS"},
     {"title": "BrookConsts.LS", "text": " ", "tags": "", "loc": "BrookConsts.html#LS"},
     {"title": "BrookConsts.RS", "text": " ", "tags": "", "loc": "BrookConsts.html#RS"},
     {"title": "BrookConsts.BROOK_GUID", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_GUID"},
     {"title": "BrookConsts.BROOK_APP_GUID", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_APP_GUID"},
     {"title": "BrookConsts.BROOK_ERROR_MASK", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_ERROR_MASK"},
     {"title": "BrookConsts.BROOK_GMT_FRMT", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_GMT_FRMT"},
     {"title": "BrookConsts.BROOK_UUID_MASK", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_UUID_MASK"},
     {"title": "BrookConsts.BROOK_UUID_SEP_MASK", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_UUID_SEP_MASK"},
     {"title": "BrookConsts.BROOK_OVERRIDDEN_METHOD", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_OVERRIDDEN_METHOD"},
     {"title": "BrookConsts.BROOK_SESS_ID", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_SESS_ID"},
     {"title": "BrookConsts.BROOK_SESS_PREFIX", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_SESS_PREFIX"},
     {"title": "BrookConsts.BROOK_SESS_DEFAULT_TIMEOUT", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_SESS_DEFAULT_TIMEOUT"},
     {"title": "BrookConsts.BROOK_MAX_MIME_TYPE", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_MAX_MIME_TYPE"},
     {"title": "BrookConsts.BROOK_MIME_TYPE", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_MIME_TYPE"},
     {"title": "BrookConsts.DefInt", "text": " ", "tags": "", "loc": "BrookConsts.html#DefInt"},
     {"title": "BrookConsts.DefInt64", "text": " ", "tags": "", "loc": "BrookConsts.html#DefInt64"},
     {"title": "BrookConsts.DefBool", "text": " ", "tags": "", "loc": "BrookConsts.html#DefBool"},
     {"title": "BrookConsts.DefTime", "text": " ", "tags": "", "loc": "BrookConsts.html#DefTime"},
     {"title": "BrookConsts.DefDate", "text": " ", "tags": "", "loc": "BrookConsts.html#DefDate"},
     {"title": "BrookConsts.DefDateTime", "text": " ", "tags": "", "loc": "BrookConsts.html#DefDateTime"},
     {"title": "BrookConsts.DefFloat", "text": " ", "tags": "", "loc": "BrookConsts.html#DefFloat"},
     {"title": "BrookConsts.BROOK_HTTP_DAEMON_DESCRIPTION", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_HTTP_DAEMON_DESCRIPTION"},
     {"title": "BrookConsts.BROOK_HTTP_DAEMON_DISPLAYNAME", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_HTTP_DAEMON_DISPLAYNAME"},
     {"title": "BrookConsts.BROOK_HTTP_DAEMON_NAME", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_HTTP_DAEMON_NAME"},
     {"title": "BrookConsts.BROOK_HTTP_DAEMON_CLASSNAME", "text": " ", "tags": "", "loc": "BrookConsts.html#BROOK_HTTP_DAEMON_CLASSNAME"},
     {"title": "BrookException", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookException.html"},
     {"title": "BrookException.EBrook", "text": " ", "tags": "", "loc": "BrookException.EBrook.html"},
     {"title": "BrookException.EBrook.Create", "text": "    ", "tags": "", "loc": "BrookException.EBrook.html#Create"},
     {"title": "BrookException.EBrook.Create", "text": "    ", "tags": "", "loc": "BrookException.EBrook.html#Create"},
     {"title": "BrookException.EBrook.Create", "text": "    ", "tags": "", "loc": "BrookException.EBrook.html#Create"},
     {"title": "BrookException.EBrook.CreateFmt", "text": "    ", "tags": "", "loc": "BrookException.EBrook.html#CreateFmt"},
     {"title": "BrookException.EBrook.CreateFmt", "text": "    ", "tags": "", "loc": "BrookException.EBrook.html#CreateFmt"},
     {"title": "BrookException.EBrook.CreateFmt", "text": "    ", "tags": "", "loc": "BrookException.EBrook.html#CreateFmt"},
     {"title": "BrookException.EBrookHttp404", "text": " ", "tags": "", "loc": "BrookException.EBrookHttp404.html"},
     {"title": "BrookException.EBrookHttp500", "text": " ", "tags": "", "loc": "BrookException.EBrookHttp500.html"},
     {"title": "BrookException.EBrookClass", "text": " ", "tags": "", "loc": "BrookException.html#EBrookClass"},
     {"title": "BrookHttpClient", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookHttpClient.html"},
     {"title": "BrookHttpClient.EBrookHttpDef", "text": " ", "tags": "", "loc": "BrookHttpClient.EBrookHttpDef.html"},
     {"title": "BrookHttpClient.EBrookHttpDefs", "text": " ", "tags": "", "loc": "BrookHttpClient.EBrookHttpDefs.html"},
     {"title": "BrookHttpClient.EBrookHttpClient", "text": " ", "tags": "", "loc": "BrookHttpClient.EBrookHttpClient.html"},
     {"title": "BrookHttpClient.TBrookHttpResult", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpResult.html"},
     {"title": "BrookHttpClient.TBrookHttpResult.StatusCode", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpResult.html#StatusCode"},
     {"title": "BrookHttpClient.TBrookHttpResult.ReasonPhrase", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpResult.html#ReasonPhrase"},
     {"title": "BrookHttpClient.TBrookHttpResult.Header", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpResult.html#Header"},
     {"title": "BrookHttpClient.TBrookHttpResult.Content", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpResult.html#Content"},
     {"title": "BrookHttpClient.TBrookHttpDef", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html"},
     {"title": "BrookHttpClient.TBrookHttpDef.Create", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Create"},
     {"title": "BrookHttpClient.TBrookHttpDef.Register", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Register"},
     {"title": "BrookHttpClient.TBrookHttpDef.Unregister", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Unregister"},
     {"title": "BrookHttpClient.TBrookHttpDef.GetLibrary", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#GetLibrary"},
     {"title": "BrookHttpClient.TBrookHttpDef.AddHeader", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#AddHeader"},
     {"title": "BrookHttpClient.TBrookHttpDef.Request", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Request"},
     {"title": "BrookHttpClient.TBrookHttpDef.Get", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Get"},
     {"title": "BrookHttpClient.TBrookHttpDef.Post", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Post"},
     {"title": "BrookHttpClient.TBrookHttpDef.Put", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Put"},
     {"title": "BrookHttpClient.TBrookHttpDef.Delete", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Delete"},
     {"title": "BrookHttpClient.TBrookHttpDef.Options", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Options"},
     {"title": "BrookHttpClient.TBrookHttpDef.Head", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Head"},
     {"title": "BrookHttpClient.TBrookHttpDef.PostForm", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#PostForm"},
     {"title": "BrookHttpClient.TBrookHttpDef.PostForm", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#PostForm"},
     {"title": "BrookHttpClient.TBrookHttpDef.PostFile", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#PostFile"},
     {"title": "BrookHttpClient.TBrookHttpDef.PostFile", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#PostFile"},
     {"title": "BrookHttpClient.TBrookHttpDef.ContentType", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#ContentType"},
     {"title": "BrookHttpClient.TBrookHttpDef.Contents", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Contents"},
     {"title": "BrookHttpClient.TBrookHttpDef.Cookies", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Cookies"},
     {"title": "BrookHttpClient.TBrookHttpDef.Document", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Document"},
     {"title": "BrookHttpClient.TBrookHttpDef.Headers", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Headers"},
     {"title": "BrookHttpClient.TBrookHttpDef.StatusCode", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#StatusCode"},
     {"title": "BrookHttpClient.TBrookHttpDef.ReasonPhrase", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#ReasonPhrase"},
     {"title": "BrookHttpClient.TBrookHttpDef.Method", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Method"},
     {"title": "BrookHttpClient.TBrookHttpDef.Url", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Url"},
     {"title": "BrookHttpClient.TBrookHttpDef.Client", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDef.html#Client"},
     {"title": "BrookHttpClient.TBrookHttpDefs", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDefs.html"},
     {"title": "BrookHttpClient.TBrookHttpDefs.Service", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDefs.html#Service"},
     {"title": "BrookHttpClient.TBrookHttpDefs.Find", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDefs.html#Find"},
     {"title": "BrookHttpClient.TBrookHttpDefs.ItemByLibrary", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpDefs.html#ItemByLibrary"},
     {"title": "BrookHttpClient.TBrookHttpClient", "text": " ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html"},
     {"title": "BrookHttpClient.TBrookHttpClient.Create", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#Create"},
     {"title": "BrookHttpClient.TBrookHttpClient.SetLibrary", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#SetLibrary"},
     {"title": "BrookHttpClient.TBrookHttpClient.Prepare", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#Prepare"},
     {"title": "BrookHttpClient.TBrookHttpClient.Get", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#Get"},
     {"title": "BrookHttpClient.TBrookHttpClient.Post", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#Post"},
     {"title": "BrookHttpClient.TBrookHttpClient.Put", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#Put"},
     {"title": "BrookHttpClient.TBrookHttpClient.Delete", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#Delete"},
     {"title": "BrookHttpClient.TBrookHttpClient.Options", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#Options"},
     {"title": "BrookHttpClient.TBrookHttpClient.Head", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#Head"},
     {"title": "BrookHttpClient.TBrookHttpClient.PostForm", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#PostForm"},
     {"title": "BrookHttpClient.TBrookHttpClient.PostForm", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#PostForm"},
     {"title": "BrookHttpClient.TBrookHttpClient.PostFile", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#PostFile"},
     {"title": "BrookHttpClient.TBrookHttpClient.PostFile", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#PostFile"},
     {"title": "BrookHttpClient.TBrookHttpClient.Request", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#Request"},
     {"title": "BrookHttpClient.TBrookHttpClient.Request", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#Request"},
     {"title": "BrookHttpClient.TBrookHttpClient.Request", "text": "    ", "tags": "", "loc": "BrookHttpClient.TBrookHttpClient.html#Request"},
     {"title": "BrookHttpClient.TBrookHttpDefClass", "text": " ", "tags": "", "loc": "BrookHttpClient.html#TBrookHttpDefClass"},
     {"title": "BrookHttpClient.TBrookHttpDefsClass", "text": " ", "tags": "", "loc": "BrookHttpClient.html#TBrookHttpDefsClass"},
     {"title": "BrookHttpClient.TBrookHttpClientClass", "text": " ", "tags": "", "loc": "BrookHttpClient.html#TBrookHttpClientClass"},
     {"title": "BrookHttpConsts", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookHttpConsts.html"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_CONTINUE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_CONTINUE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_SWITCHING_PROTOCOLS", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_SWITCHING_PROTOCOLS"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_OK", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_OK"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_CREATED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_CREATED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_ACCEPTED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_ACCEPTED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_NON_AUTHORITATIVE_INFORMATION", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_NON_AUTHORITATIVE_INFORMATION"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_NO_CONTENT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_NO_CONTENT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_RESET_CONTENT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_RESET_CONTENT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_PARTIAL_CONTENT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_PARTIAL_CONTENT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_MULTIPLE_CHOICES", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_MULTIPLE_CHOICES"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_MOVED_PERMANENTLY", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_MOVED_PERMANENTLY"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_FOUND", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_FOUND"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_SEE_OTHER", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_SEE_OTHER"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_NOT_MODIFIED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_NOT_MODIFIED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_USE_PROXY", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_USE_PROXY"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_TEMPORARY_REDIRECT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_TEMPORARY_REDIRECT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_BAD_REQUEST", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_BAD_REQUEST"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_UNAUTHORIZED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_UNAUTHORIZED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_PAYMENT_REQUIRED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_PAYMENT_REQUIRED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_FORBIDDEN", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_FORBIDDEN"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_NOT_FOUND", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_NOT_FOUND"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_METHOD_NOT_ALLOWED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_METHOD_NOT_ALLOWED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_NOT_ACCEPTABLE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_NOT_ACCEPTABLE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_PROXY_AUTHENTICATION_REQUIRED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_PROXY_AUTHENTICATION_REQUIRED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_REQUEST_TIMEOUT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_REQUEST_TIMEOUT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_CONFLICT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_CONFLICT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_GONE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_GONE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_LENGTH_REQUIRED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_LENGTH_REQUIRED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_PRECONDITION_FAILED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_PRECONDITION_FAILED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_REQUEST_ENTITY_TOO_LARGE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_REQUEST_ENTITY_TOO_LARGE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_REQUEST_URI_TOO_LONG", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_REQUEST_URI_TOO_LONG"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_UNSUPPORTED_MEDIA_TYPE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_UNSUPPORTED_MEDIA_TYPE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_REQUESTED_RANGE_NOT_SATISFIABLE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_REQUESTED_RANGE_NOT_SATISFIABLE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_EXPECTATION_FAILED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_EXPECTATION_FAILED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_NOT_IMPLEMENTED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_NOT_IMPLEMENTED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_BAD_GATEWAY", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_BAD_GATEWAY"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_SERVICE_UNAVAILABLE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_SERVICE_UNAVAILABLE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_GATEWAY_TIMEOUT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_GATEWAY_TIMEOUT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_STATUS_CODE_HTTP_VERSION_NOT_SUPPORTED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_STATUS_CODE_HTTP_VERSION_NOT_SUPPORTED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_CONTINUE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_CONTINUE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_SWITCHING_PROTOCOLS", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_SWITCHING_PROTOCOLS"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_OK", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_OK"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_CREATED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_CREATED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_ACCEPTED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_ACCEPTED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_NON_AUTHORITATIVE_INFORMATION", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_NON_AUTHORITATIVE_INFORMATION"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_NO_CONTENT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_NO_CONTENT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_RESET_CONTENT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_RESET_CONTENT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_PARTIAL_CONTENT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_PARTIAL_CONTENT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_MULTIPLE_CHOICES", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_MULTIPLE_CHOICES"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_MOVED_PERMANENTLY", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_MOVED_PERMANENTLY"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_FOUND", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_FOUND"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_SEE_OTHER", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_SEE_OTHER"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_NOT_MODIFIED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_NOT_MODIFIED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_USE_PROXY", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_USE_PROXY"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_TEMPORARY_REDIRECT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_TEMPORARY_REDIRECT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_BAD_REQUEST", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_BAD_REQUEST"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_UNAUTHORIZED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_UNAUTHORIZED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_PAYMENT_REQUIRED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_PAYMENT_REQUIRED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_FORBIDDEN", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_FORBIDDEN"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_NOT_FOUND", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_NOT_FOUND"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_METHOD_NOT_ALLOWED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_METHOD_NOT_ALLOWED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_NOT_ACCEPTABLE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_NOT_ACCEPTABLE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_PROXY_AUTHENTICATION_REQUIRED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_PROXY_AUTHENTICATION_REQUIRED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_REQUEST_TIMEOUT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_REQUEST_TIMEOUT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_CONFLICT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_CONFLICT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_GONE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_GONE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_LENGTH_REQUIRED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_LENGTH_REQUIRED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_PRECONDITION_FAILED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_PRECONDITION_FAILED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_REQUEST_ENTITY_TOO_LARGE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_REQUEST_ENTITY_TOO_LARGE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_REQUEST_URI_TOO_LONG", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_REQUEST_URI_TOO_LONG"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_UNSUPPORTED_MEDIA_TYPE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_UNSUPPORTED_MEDIA_TYPE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_REQUESTED_RANGE_NOT_SATISFIABLE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_REQUESTED_RANGE_NOT_SATISFIABLE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_EXPECTATION_FAILED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_EXPECTATION_FAILED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_INTERNAL_SERVER_ERROR", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_INTERNAL_SERVER_ERROR"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_NOT_IMPLEMENTED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_NOT_IMPLEMENTED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_BAD_GATEWAY", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_BAD_GATEWAY"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_SERVICE_UNAVAILABLE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_SERVICE_UNAVAILABLE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_GATEWAY_TIMEOUT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_GATEWAY_TIMEOUT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REASON_PHRASE_HTTP_VERSION_NOT_SUPPORTED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REASON_PHRASE_HTTP_VERSION_NOT_SUPPORTED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_GET", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_GET"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_POST", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_POST"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_PUT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_PUT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_DELETE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_DELETE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_HEAD", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_HEAD"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_OPTIONS", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_OPTIONS"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_PATCH", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_PATCH"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_PROPFIND", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_PROPFIND"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_PROPPATCH", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_PROPPATCH"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_COPY", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_COPY"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_MOVE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_MOVE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_MKCOL", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_MKCOL"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_TRACE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_TRACE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_LOCK", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_LOCK"},
     {"title": "BrookHttpConsts.BROOK_HTTP_REQUEST_METHOD_UNLOCK", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_REQUEST_METHOD_UNLOCK"},
     {"title": "BrookHttpConsts.BROOK_HTTP_HEADER_CACHE_CONTROL", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_HEADER_CACHE_CONTROL"},
     {"title": "BrookHttpConsts.BROOK_HTTP_HEADER_CONTENT_DESCRIPTION", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_HEADER_CONTENT_DESCRIPTION"},
     {"title": "BrookHttpConsts.BROOK_HTTP_HEADER_CONTENT_DISPOSITION", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_HEADER_CONTENT_DISPOSITION"},
     {"title": "BrookHttpConsts.BROOK_HTTP_HEADER_ETAG", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_HEADER_ETAG"},
     {"title": "BrookHttpConsts.BROOK_HTTP_HEADER_STATUS", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_HEADER_STATUS"},
     {"title": "BrookHttpConsts.BROOK_HTTP_HEADER_TRANSFER_ENCODING", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_HEADER_TRANSFER_ENCODING"},
     {"title": "BrookHttpConsts.BROOK_HTTP_HEADER_X_POWERED_BY", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_HEADER_X_POWERED_BY"},
     {"title": "BrookHttpConsts.BROOK_HTTP_HEADER_CHARSET", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_HEADER_CHARSET"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_TEXT_PLAIN", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_TEXT_PLAIN"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_TEXT_HTML", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_TEXT_HTML"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_TEXT_CSS", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_TEXT_CSS"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_TEXT_XML", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_TEXT_XML"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_TEXT_CVS", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_TEXT_CVS"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_TEXT_RICHTEXT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_TEXT_RICHTEXT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_TEXT_RTF", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_TEXT_RTF"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_MULTIPART_FORM_DATA", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_MULTIPART_FORM_DATA"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_MULTIPART_FORM_DATA_BOUNDARY", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_MULTIPART_FORM_DATA_BOUNDARY"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_JSON", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_JSON"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_XML", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_XML"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_RDF_XML", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_RDF_XML"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_X_WWW_FORM_URLENCODED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_X_WWW_FORM_URLENCODED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_JAVASCRIPT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_JAVASCRIPT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_OCTET_STREAM", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_OCTET_STREAM"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_PDF", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_PDF"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_ZIP", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_ZIP"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_MSWORD", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_MSWORD"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_MS_EXCEL", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_MS_EXCEL"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_MS_POWERPOINT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_MS_POWERPOINT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_MP4", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_MP4"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_APP_MPEG4_GENERIC", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_APP_MPEG4_GENERIC"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_IMAGE_PNG", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_IMAGE_PNG"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_IMAGE_JPEG", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_IMAGE_JPEG"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_IMAGE_GIF", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_IMAGE_GIF"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_IMAGE_TIFF", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_IMAGE_TIFF"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_AUDIO_MPEG", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_AUDIO_MPEG"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_VIDEO_MPEG", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_VIDEO_MPEG"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_TYPE_VIDEO_QUICKTIME", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_TYPE_VIDEO_QUICKTIME"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_NO_CACHE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_NO_CACHE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_NO_STORE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_NO_STORE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_MAX_AGE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_MAX_AGE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_MAX_STALE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_MAX_STALE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_MIN_FRESH", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_MIN_FRESH"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_NO_TRANSFORM", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_NO_TRANSFORM"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_ONLY_IF_CACHED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_ONLY_IF_CACHED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_CACHE_EXTENSION", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_CACHE_EXTENSION"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_PUBLIC", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_PUBLIC"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_PRIVATE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_PRIVATE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_MUST_REVALIDATE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_MUST_REVALIDATE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_PROXY_REVALIDATE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_PROXY_REVALIDATE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CACHE_CONTROL_S_MAXAGE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CACHE_CONTROL_S_MAXAGE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_DISPOSITION_INLINE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_DISPOSITION_INLINE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_DISPOSITION_ATTACHMENT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_DISPOSITION_ATTACHMENT"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_ENCODING_DEFLATE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_ENCODING_DEFLATE"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_ENCODING_GZIP", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_ENCODING_GZIP"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_ENCODING_SDCH", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_ENCODING_SDCH"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CONTENT_ENCODING_X_GZIP", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CONTENT_ENCODING_X_GZIP"},
     {"title": "BrookHttpConsts.BROOK_HTTP_TRANSFER_ENCODING_CHUNKED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_TRANSFER_ENCODING_CHUNKED"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CHARSET_ISO_8859_1", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CHARSET_ISO_8859_1"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CHARSET_UTF_8", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CHARSET_UTF_8"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_DOCUMENT_ROOT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_DOCUMENT_ROOT"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_SERVER_ADDR", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_SERVER_ADDR"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_SERVER_ADMIN", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_SERVER_ADMIN"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_SERVER_SOFTWARE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_SERVER_SOFTWARE"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_SERVER_NAME", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_SERVER_NAME"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_GATEWAY_INTERFACE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_GATEWAY_INTERFACE"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_SERVER_PROTOCOL", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_SERVER_PROTOCOL"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_SERVER_PORT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_SERVER_PORT"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_REQUEST_METHOD", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_REQUEST_METHOD"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_REQUEST_URI", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_REQUEST_URI"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_PATH_INFO", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_PATH_INFO"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_PATH_TRANSLATED", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_PATH_TRANSLATED"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_SCRIPT_FILENAME", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_SCRIPT_FILENAME"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_SCRIPT_NAME", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_SCRIPT_NAME"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_QUERY_STRING", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_QUERY_STRING"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_REMOTE_HOST", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_REMOTE_HOST"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_REMOTE_ADDR", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_REMOTE_ADDR"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_REMOTE_PORT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_REMOTE_PORT"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_AUTH_TYPE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_AUTH_TYPE"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_REMOTE_USER", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_REMOTE_USER"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_REMOTE_IDENT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_REMOTE_IDENT"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_CONTENT_TYPE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_CONTENT_TYPE"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_CONTENT_LENGTH", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_CONTENT_LENGTH"},
     {"title": "BrookHttpConsts.BROOK_SRV_ENV_X_FORWARDED_FOR", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_SRV_ENV_X_FORWARDED_FOR"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_COOKIE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_COOKIE"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_REFERER", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_REFERER"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_USER_AGENT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_USER_AGENT"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_IF_MODIFIED_SINCE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_IF_MODIFIED_SINCE"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_HOST", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_HOST"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_CONNECTION", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_CONNECTION"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_CACHE_CONTROL", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_CACHE_CONTROL"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_ACCEPT", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_ACCEPT"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_ACCEPT_ENCODING", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_ACCEPT_ENCODING"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_ACCEPT_LANGUAGE", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_ACCEPT_LANGUAGE"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_ACCEPT_CHARSET", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_ACCEPT_CHARSET"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_IF_NONE_MATCH", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_IF_NONE_MATCH"},
     {"title": "BrookHttpConsts.BROOK_CLT_ENV_HTTP_X_REQUESTED_WITH", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_CLT_ENV_HTTP_X_REQUESTED_WITH"},
     {"title": "BrookHttpConsts.BROOK_HTTP_RESPONSE_TEMPLATE_NOT_FOUND", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_RESPONSE_TEMPLATE_NOT_FOUND"},
     {"title": "BrookHttpConsts.BROOK_HTTP_RESPONSE_TEMPLATE_INTERNAL_SERVER_ERROR", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_RESPONSE_TEMPLATE_INTERNAL_SERVER_ERROR"},
     {"title": "BrookHttpConsts.BROOK_HTTP_CLIENT_DEFAULT_LIBRARY", "text": " ", "tags": "", "loc": "BrookHttpConsts.html#BROOK_HTTP_CLIENT_DEFAULT_LIBRARY"},
     {"title": "BrookHttpDefs", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookHttpDefs.html"},
     {"title": "BrookHttpDefs.TBrookRequest", "text": " ", "tags": "", "loc": "BrookHttpDefs.html#TBrookRequest"},
     {"title": "BrookHttpDefs.TBrookResponse", "text": " ", "tags": "", "loc": "BrookHttpDefs.html#TBrookResponse"},
     {"title": "BrookHttpDefs.TBrookUploadedFile", "text": " ", "tags": "", "loc": "BrookHttpDefs.html#TBrookUploadedFile"},
     {"title": "BrookHttpDefs.TBrookUploadedFiles", "text": " ", "tags": "", "loc": "BrookHttpDefs.html#TBrookUploadedFiles"},
     {"title": "BrookHttpUtils", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookHttpUtils.html"},
     {"title": "BrookHttpUtils.BrookDateTimeToGMT", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookDateTimeToGMT"},
     {"title": "BrookHttpUtils.BrookSameUrl", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookSameUrl"},
     {"title": "BrookHttpUtils.BrookStatusCodeToReasonPhrase", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookStatusCodeToReasonPhrase"},
     {"title": "BrookHttpUtils.BrookReasonPhraseToStatusCode", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookReasonPhraseToStatusCode"},
     {"title": "BrookHttpUtils.BrookGetAcceptEncodingSet", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookGetAcceptEncodingSet"},
     {"title": "BrookHttpUtils.BrookGetAcceptEncoding", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookGetAcceptEncoding"},
     {"title": "BrookHttpUtils.BrookMimeTypeFromFileExt", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookMimeTypeFromFileExt"},
     {"title": "BrookHttpUtils.BrookMimeTypeFromFileName", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookMimeTypeFromFileName"},
     {"title": "BrookHttpUtils.BrookFileExtFromMimeType", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookFileExtFromMimeType"},
     {"title": "BrookHttpUtils.BrookExtractUrlFileName", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookExtractUrlFileName"},
     {"title": "BrookHttpUtils.BrookExtractUrlFileName", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookExtractUrlFileName"},
     {"title": "BrookHttpUtils.BrookRequestMethodToStr", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookRequestMethodToStr"},
     {"title": "BrookHttpUtils.BrookStrToRequestMethod", "text": "    ", "tags": "", "loc": "BrookHttpUtils.html#BrookStrToRequestMethod"},
     {"title": "BrookHttpUtils.BrookHttpRequest", "text": " (allows all request methods)    ", "tags": "", "loc": "BrookHttpUtils.html#BrookHttpRequest"},
     {"title": "BrookHttpUtils.TBrookAcceptEncodingSet", "text": " ", "tags": "", "loc": "BrookHttpUtils.html#TBrookAcceptEncodingSet"},
     {"title": "BrookMessages", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookMessages.html"},
     {"title": "BrookMessages.SBrookInvalidRequestMethodError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookInvalidRequestMethodError"},
     {"title": "BrookMessages.SBrookItemNotFoundError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookItemNotFoundError"},
     {"title": "BrookMessages.SBrookFileNotFoundError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookFileNotFoundError"},
     {"title": "BrookMessages.SBrookNoRequestMethodError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookNoRequestMethodError"},
     {"title": "BrookMessages.SBrookNoApplicationRegisteredError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookNoApplicationRegisteredError"},
     {"title": "BrookMessages.SBrookApplicationAlreadyRegisteredError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookApplicationAlreadyRegisteredError"},
     {"title": "BrookMessages.SBrookRegiterTBrookActionError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookRegiterTBrookActionError"},
     {"title": "BrookMessages.SBrookActionAlreadyRegisteredError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookActionAlreadyRegisteredError"},
     {"title": "BrookMessages.SBrookDefaultActionAlreadyRegisteredError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookDefaultActionAlreadyRegisteredError"},
     {"title": "BrookMessages.SBrookPatternAlreadyRegisteredError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookPatternAlreadyRegisteredError"},
     {"title": "BrookMessages.SBrookRouterServiceAlreadyRegisteredError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookRouterServiceAlreadyRegisteredError"},
     {"title": "BrookMessages.SBrookNoRouterServiceRegisteredError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookNoRouterServiceRegisteredError"},
     {"title": "BrookMessages.SBrookNoRouteRegisteredError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookNoRouteRegisteredError"},
     {"title": "BrookMessages.SBrookCfgFileNotFoundError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookCfgFileNotFoundError"},
     {"title": "BrookMessages.SBrookNotNilError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookNotNilError"},
     {"title": "BrookMessages.SBrookEmptyLibraryNameError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookEmptyLibraryNameError"},
     {"title": "BrookMessages.SBrookMethodNotAllowedError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookMethodNotAllowedError"},
     {"title": "BrookMessages.SBrookConstraintAlreadyRegisteredError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookConstraintAlreadyRegisteredError"},
     {"title": "BrookMessages.SBrookConstraintsServiceAlreadyRegisteredError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookConstraintsServiceAlreadyRegisteredError"},
     {"title": "BrookMessages.SBrookNoConstraintsServiceRegisteredError", "text": " ", "tags": "", "loc": "BrookMessages.html#SBrookNoConstraintsServiceRegisteredError"},
     {"title": "BrookMiddleware", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookMiddleware.html"},
     {"title": "BrookMiddleware.EBrookMiddleware", "text": " ", "tags": "", "loc": "BrookMiddleware.EBrookMiddleware.html"},
     {"title": "BrookMiddleware.TBrookMiddleware", "text": " ", "tags": "", "loc": "BrookMiddleware.TBrookMiddleware.html"},
     {"title": "BrookMiddleware.TBrookMiddleware.Create", "text": "    ", "tags": "", "loc": "BrookMiddleware.TBrookMiddleware.html#Create"},
     {"title": "BrookMiddleware.TBrookMiddleware.Execute", "text": "    ", "tags": "", "loc": "BrookMiddleware.TBrookMiddleware.html#Execute"},
     {"title": "BrookMiddleware.TBrookMiddleware.BindExecution", "text": "    ", "tags": "", "loc": "BrookMiddleware.TBrookMiddleware.html#BindExecution"},
     {"title": "BrookMiddleware.TBrookMiddlewareClass", "text": " ", "tags": "", "loc": "BrookMiddleware.html#TBrookMiddlewareClass"},
     {"title": "BrookRouter", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookRouter.html"},
     {"title": "BrookRouter.EBrookRoutes", "text": " ", "tags": "", "loc": "BrookRouter.EBrookRoutes.html"},
     {"title": "BrookRouter.EBrookRouter", "text": " ", "tags": "", "loc": "BrookRouter.EBrookRouter.html"},
     {"title": "BrookRouter.TBrookRoute", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRoute.html"},
     {"title": "BrookRouter.TBrookRoute.ActionClass", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRoute.html#ActionClass"},
     {"title": "BrookRouter.TBrookRoute.Method", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRoute.html#Method"},
     {"title": "BrookRouter.TBrookRoute.Pattern", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRoute.html#Pattern"},
     {"title": "BrookRouter.TBrookRoutes", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRoutes.html"},
     {"title": "BrookRouter.TBrookRoutes.Create", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRoutes.html#Create"},
     {"title": "BrookRouter.TBrookRoutes.Destroy", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRoutes.html#Destroy"},
     {"title": "BrookRouter.TBrookRoutes.Clear", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRoutes.html#Clear"},
     {"title": "BrookRouter.TBrookRoutes.Count", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRoutes.html#Count"},
     {"title": "BrookRouter.TBrookRoutes.Add", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRoutes.html#Add"},
     {"title": "BrookRouter.TBrookRoutes.GetDefaultActionClass", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRoutes.html#GetDefaultActionClass"},
     {"title": "BrookRouter.TBrookRoutes.PatternByActionClass", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRoutes.html#PatternByActionClass"},
     {"title": "BrookRouter.TBrookRoutes.ActionClassByPattern", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRoutes.html#ActionClassByPattern"},
     {"title": "BrookRouter.TBrookRoutes.ActionClassByClassName", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRoutes.html#ActionClassByClassName"},
     {"title": "BrookRouter.TBrookRoutes.Items", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRoutes.html#Items"},
     {"title": "BrookRouter.TBrookRouter", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRouter.html"},
     {"title": "BrookRouter.TBrookRouter.Create", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#Create"},
     {"title": "BrookRouter.TBrookRouter.Destroy", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#Destroy"},
     {"title": "BrookRouter.TBrookRouter.GetServiceClass", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#GetServiceClass"},
     {"title": "BrookRouter.TBrookRouter.RegisterService", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#RegisterService"},
     {"title": "BrookRouter.TBrookRouter.UnregisterService", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#UnregisterService"},
     {"title": "BrookRouter.TBrookRouter.Service", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#Service"},
     {"title": "BrookRouter.TBrookRouter.RootUrl", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#RootUrl"},
     {"title": "BrookRouter.TBrookRouter.RootUrl", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#RootUrl"},
     {"title": "BrookRouter.TBrookRouter.MethodNotAllowed", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#MethodNotAllowed"},
     {"title": "BrookRouter.TBrookRouter.UrlFor", "text": " Exemple:    <p></p>    <pre class=\"longcode\">       <span class=\"pascal_keyword\">procedure</span> TMyAction.Get;        <span class=\"pascal_keyword\">begin</span>          <span class=\"pascal_comment\">// When calling with http://localhost/cgi-bin/cgi1/foo/myvalue</span>          <span class=\"pascal_comment\">// the output will be /cgi-bin/cgi1/foo/myvalue</span>          <span class=\"pascal_keyword\">Write</span>(UrlFor(TMyAction, [<span class=\"pascal_string\">'myvalue'</span>]));        <span class=\"pascal_keyword\">end</span>;          <span class=\"pascal_keyword\">initialization</span>          TMyAction.<span class=\"pascal_keyword\">Register</span>(<span class=\"pascal_string\">'/foo/:myvar'</span>)</pre>    <p>    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#UrlFor"},
     {"title": "BrookRouter.TBrookRouter.UrlFor", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#UrlFor"},
     {"title": "BrookRouter.TBrookRouter.Canonicalize", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#Canonicalize"},
     {"title": "BrookRouter.TBrookRouter.MatchPattern", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#MatchPattern"},
     {"title": "BrookRouter.TBrookRouter.Route", "text": "    ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#Route"},
     {"title": "BrookRouter.TBrookRouter.Routes", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#Routes"},
     {"title": "BrookRouter.TBrookRouter.AfterExecuteAction", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#AfterExecuteAction"},
     {"title": "BrookRouter.TBrookRouter.AfterMatchPattern", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#AfterMatchPattern"},
     {"title": "BrookRouter.TBrookRouter.AfterRoute", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#AfterRoute"},
     {"title": "BrookRouter.TBrookRouter.BeforeExecuteAction", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#BeforeExecuteAction"},
     {"title": "BrookRouter.TBrookRouter.BeforeMatchPattern", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#BeforeMatchPattern"},
     {"title": "BrookRouter.TBrookRouter.BeforeRoute", "text": " ", "tags": "", "loc": "BrookRouter.TBrookRouter.html#BeforeRoute"},
     {"title": "BrookRouter.TBrookRoutesClass", "text": " ", "tags": "", "loc": "BrookRouter.html#TBrookRoutesClass"},
     {"title": "BrookRouter.TBrookRouterClass", "text": " ", "tags": "", "loc": "BrookRouter.html#TBrookRouterClass"},
     {"title": "BrookRouter.PBrookRoute", "text": " ", "tags": "", "loc": "BrookRouter.html#PBrookRoute"},
     {"title": "BrookRouter.TBrookMatchPatternEvent", "text": "    ", "tags": "", "loc": "BrookRouter.html#TBrookMatchPatternEvent"},
     {"title": "BrookRouter.PBrookMatchPatternEvent", "text": " ", "tags": "", "loc": "BrookRouter.html#PBrookMatchPatternEvent"},
     {"title": "BrookRouter.TBrookRouteEvent", "text": "    ", "tags": "", "loc": "BrookRouter.html#TBrookRouteEvent"},
     {"title": "BrookRouter.PBrookRouteEvent", "text": " ", "tags": "", "loc": "BrookRouter.html#PBrookRouteEvent"},
     {"title": "BrookRouter.TBrookExecuteActionEvent", "text": "    ", "tags": "", "loc": "BrookRouter.html#TBrookExecuteActionEvent"},
     {"title": "BrookRouter.PBrookExecuteActionEvent", "text": " ", "tags": "", "loc": "BrookRouter.html#PBrookExecuteActionEvent"},
     {"title": "BrookSession", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookSession.html"},
     {"title": "BrookSession.EBrookSession", "text": " ", "tags": "", "loc": "BrookSession.EBrookSession.html"},
     {"title": "BrookSession.TBrookSession", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html"},
     {"title": "BrookSession.TBrookSession.Create", "text": "    ", "tags": "", "loc": "BrookSession.TBrookSession.html#Create"},
     {"title": "BrookSession.TBrookSession.Destroy", "text": "    ", "tags": "", "loc": "BrookSession.TBrookSession.html#Destroy"},
     {"title": "BrookSession.TBrookSession.GetFields", "text": "    ", "tags": "", "loc": "BrookSession.TBrookSession.html#GetFields"},
     {"title": "BrookSession.TBrookSession.IsExpired", "text": "    ", "tags": "", "loc": "BrookSession.TBrookSession.html#IsExpired"},
     {"title": "BrookSession.TBrookSession.IsEmpty", "text": "    ", "tags": "", "loc": "BrookSession.TBrookSession.html#IsEmpty"},
     {"title": "BrookSession.TBrookSession.GenerateID", "text": "    ", "tags": "", "loc": "BrookSession.TBrookSession.html#GenerateID"},
     {"title": "BrookSession.TBrookSession.Start", "text": "    ", "tags": "", "loc": "BrookSession.TBrookSession.html#Start"},
     {"title": "BrookSession.TBrookSession.Finish", "text": "    ", "tags": "", "loc": "BrookSession.TBrookSession.html#Finish"},
     {"title": "BrookSession.TBrookSession.Expire", "text": "    ", "tags": "", "loc": "BrookSession.TBrookSession.html#Expire"},
     {"title": "BrookSession.TBrookSession.Exists", "text": "    ", "tags": "", "loc": "BrookSession.TBrookSession.html#Exists"},
     {"title": "BrookSession.TBrookSession.CookieName", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#CookieName"},
     {"title": "BrookSession.TBrookSession.CookieDomain", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#CookieDomain"},
     {"title": "BrookSession.TBrookSession.CookiePath", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#CookiePath"},
     {"title": "BrookSession.TBrookSession.CookieSecure", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#CookieSecure"},
     {"title": "BrookSession.TBrookSession.CookieExpires", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#CookieExpires"},
     {"title": "BrookSession.TBrookSession.Fields", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#Fields"},
     {"title": "BrookSession.TBrookSession.Directory", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#Directory"},
     {"title": "BrookSession.TBrookSession.Expired", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#Expired"},
     {"title": "BrookSession.TBrookSession.Empty", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#Empty"},
     {"title": "BrookSession.TBrookSession.SID", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#SID"},
     {"title": "BrookSession.TBrookSession.Started", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#Started"},
     {"title": "BrookSession.TBrookSession.FileName", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#FileName"},
     {"title": "BrookSession.TBrookSession.FilePrefix", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#FilePrefix"},
     {"title": "BrookSession.TBrookSession.TimeOut", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#TimeOut"},
     {"title": "BrookSession.TBrookSession.HttpOnly", "text": " ", "tags": "", "loc": "BrookSession.TBrookSession.html#HttpOnly"},
     {"title": "BrookSession.TBrookGSession", "text": " ", "tags": "", "loc": "BrookSession.TBrookGSession.html"},
     {"title": "BrookSession.TBrookGSession.Create", "text": "    ", "tags": "", "loc": "BrookSession.TBrookGSession.html#Create"},
     {"title": "BrookSession.TBrookGSession.Destroy", "text": "    ", "tags": "", "loc": "BrookSession.TBrookGSession.html#Destroy"},
     {"title": "BrookSession.TBrookGSession.Entity", "text": " ", "tags": "", "loc": "BrookSession.TBrookGSession.html#Entity"},
     {"title": "BrookSession.TBrookSessionClass", "text": " ", "tags": "", "loc": "BrookSession.html#TBrookSessionClass"},
     {"title": "BrookUtils", "text": "    <p>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ", "tags": "", "loc": "BrookUtils.html"},
     {"title": "BrookUtils.TBrookSettings", "text": " ", "tags": "", "loc": "BrookUtils.TBrookSettings.html"},
     {"title": "BrookUtils.TBrookSettings.Mapped", "text": " ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#Mapped"},
     {"title": "BrookUtils.TBrookSettings.Charset", "text": " ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#Charset"},
     {"title": "BrookUtils.TBrookSettings.ContentType", "text": " ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#ContentType"},
     {"title": "BrookUtils.TBrookSettings.Page404", "text": " The string will be sent as is. ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#Page404"},
     {"title": "BrookUtils.TBrookSettings.Page404File", "text": " The file content will be sent. This has higher precedence than <code>TBrookSettings.Page404</code> so when both are set, this will be processed first and only if the file is not found or cannot be read the system will fallback to <code>TBrookSettings.Page404</code> ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#Page404File"},
     {"title": "BrookUtils.TBrookSettings.Page500", "text": " The string will be sent as is. ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#Page500"},
     {"title": "BrookUtils.TBrookSettings.Page500File", "text": " The file content will be sent. This has higher precedence than <code>TBrookSettings.Page500</code> so when both are set, this will be processed first and only if the file is not found or cannot be read the system will fallback to <code>TBrookSettings.Page500</code> ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#Page500File"},
     {"title": "BrookUtils.TBrookSettings.DirectoryForUploads", "text": " ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#DirectoryForUploads"},
     {"title": "BrookUtils.TBrookSettings.DeleteUploadedFiles", "text": " ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#DeleteUploadedFiles"},
     {"title": "BrookUtils.TBrookSettings.KeepUploadedNames", "text": " ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#KeepUploadedNames"},
     {"title": "BrookUtils.TBrookSettings.AcceptsJSONContent", "text": " ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#AcceptsJSONContent"},
     {"title": "BrookUtils.TBrookSettings.Configuration", "text": " ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#Configuration"},
     {"title": "BrookUtils.TBrookSettings.RootUrl", "text": " This is used by methods such as <code>TBrookAction.UrlFor</code>, <code>TBrookActionHelper.LinkTo</code>, <code>TBrookActionHelper.ButtonTo</code> etc. By default, Brook assumes <code>SCRIPT_NAME</code> as root URL. ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#RootUrl"},
     {"title": "BrookUtils.TBrookSettings.Port", "text": " ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#Port"},
     {"title": "BrookUtils.TBrookSettings.OnError", "text": " ", "tags": "", "loc": "BrookUtils.TBrookSettings.html#OnError"},
     {"title": "BrookUtils.BrookStartsChar", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookStartsChar"},
     {"title": "BrookUtils.BrookEndsChar", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookEndsChar"},
     {"title": "BrookUtils.BrookExtractPathLevels", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookExtractPathLevels"},
     {"title": "BrookUtils.BrookGetPathLevel", "text": " Exemple:    <p><code>BrookGetPathLavel('/a/b/c/', 1)</code> = b.    ", "tags": "", "loc": "BrookUtils.html#BrookGetPathLevel"},
     {"title": "BrookUtils.BrookGetPathLevels", "text": " Exemple:    <p><code>BrookGetPathLevels('/a/b/c/', 1)</code> = b/c/.    ", "tags": "", "loc": "BrookUtils.html#BrookGetPathLevels"},
     {"title": "BrookUtils.BrookMatchMethod", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookMatchMethod"},
     {"title": "BrookUtils.BrookFileDate", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookFileDate"},
     {"title": "BrookUtils.BrookDumpStack", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookDumpStack"},
     {"title": "BrookUtils.BrookDumpStackTrace", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookDumpStackTrace"},
     {"title": "BrookUtils.BrookExcludeTrailingUrlDelimiter", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookExcludeTrailingUrlDelimiter"},
     {"title": "BrookUtils.BrookIncludeTrailingUrlDelimiter", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookIncludeTrailingUrlDelimiter"},
     {"title": "BrookUtils.BrookExists", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookExists"},
     {"title": "BrookUtils.BrookExists", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookExists"},
     {"title": "BrookUtils.BrookStringToObject", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookStringToObject"},
     {"title": "BrookUtils.BrookStringToObject", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookStringToObject"},
     {"title": "BrookUtils.BrookSafeStringToObject", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookSafeStringToObject"},
     {"title": "BrookUtils.BrookStringsToObject", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookStringsToObject"},
     {"title": "BrookUtils.BrookStringsToObject", "text": " Allows to ignore properties via an array of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookStringsToObject"},
     {"title": "BrookUtils.BrookStringsToObject", "text": " Allows to ignore properties via a list of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookStringsToObject"},
     {"title": "BrookUtils.BrookSafeStringsToObject", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookSafeStringsToObject"},
     {"title": "BrookUtils.BrookSafeStringsToObject", "text": " Allows to ignore properties via an array of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookSafeStringsToObject"},
     {"title": "BrookUtils.BrookSafeStringsToObject", "text": " Allows to ignore properties via a list of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookSafeStringsToObject"},
     {"title": "BrookUtils.BrookObjectToString", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookObjectToString"},
     {"title": "BrookUtils.BrookObjectToString", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookObjectToString"},
     {"title": "BrookUtils.BrookSafeObjectToString", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookSafeObjectToString"},
     {"title": "BrookUtils.BrookObjectToStrings", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookObjectToStrings"},
     {"title": "BrookUtils.BrookObjectToStrings", "text": " Allows to ignore properties via an array of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookObjectToStrings"},
     {"title": "BrookUtils.BrookObjectToStrings", "text": " Allows to ignore properties via a list of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookObjectToStrings"},
     {"title": "BrookUtils.BrookSafeObjectToStrings", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookSafeObjectToStrings"},
     {"title": "BrookUtils.BrookSafeObjectToStrings", "text": " Allows to ignore properties via an array of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookSafeObjectToStrings"},
     {"title": "BrookUtils.BrookSafeObjectToStrings", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookSafeObjectToStrings"},
     {"title": "BrookUtils.BrookCopyObject", "text": " list and prop. count.    ", "tags": "", "loc": "BrookUtils.html#BrookCopyObject"},
     {"title": "BrookUtils.BrookCopyObject", "text": " list and prop. count. Allows to ignore properties via an array of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookCopyObject"},
     {"title": "BrookUtils.BrookCopyObject", "text": " list and prop. count. Allows to ignore properties via a list of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookCopyObject"},
     {"title": "BrookUtils.BrookCopyObject", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookCopyObject"},
     {"title": "BrookUtils.BrookCopyObject", "text": " Allows to ignore properties via an array of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookCopyObject"},
     {"title": "BrookUtils.BrookCopyObject", "text": " Allows to ignore properties via a list of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookCopyObject"},
     {"title": "BrookUtils.BrookSafeCopyObject", "text": " list and prop. count and checking the params.    ", "tags": "", "loc": "BrookUtils.html#BrookSafeCopyObject"},
     {"title": "BrookUtils.BrookSafeCopyObject", "text": " list and prop. count and checking the params. Allows to ignore properties via an array of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookSafeCopyObject"},
     {"title": "BrookUtils.BrookSafeCopyObject", "text": " list and prop. count and checking the params. Allows to ignore properties via a list of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookSafeCopyObject"},
     {"title": "BrookUtils.BrookSafeCopyObject", "text": "    ", "tags": "", "loc": "BrookUtils.html#BrookSafeCopyObject"},
     {"title": "BrookUtils.BrookSafeCopyObject", "text": " Allows to ignore properties via an array of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookSafeCopyObject"},
     {"title": "BrookUtils.BrookSafeCopyObject", "text": " Allows to ignore properties via a list of strings.    ", "tags": "", "loc": "BrookUtils.html#BrookSafeCopyObject"},
     {"title": "BrookUtils.TBrookArrayOfString", "text": " ", "tags": "", "loc": "BrookUtils.html#TBrookArrayOfString"},
     {"title": "BrookUtils.TBrookRequestMethod", "text": "  rmUnknown    rmAll    rmGet    rmPost    rmPut    rmDelete    rmHead    rmOptions    rmTrace   ", "tags": "", "loc": "BrookUtils.html#TBrookRequestMethod"},
     {"title": "BrookUtils.BrookSettings", "text": " ", "tags": "", "loc": "BrookUtils.html#BrookSettings"}
]};
